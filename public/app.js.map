{"version":3,"file":"app.js","mappings":"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","sources":["webpack://phaser-3-vsc-typescript-nodejs/./src/ts/Game.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/Scenes/Boot.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/Scenes/MainGame.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/Scenes/MainMenu.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/Scenes/MainSettings.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/Scenes/Preloader.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/Scenes/SplashScreen.ts","webpack://phaser-3-vsc-typescript-nodejs/./src/ts/Utilities.ts","webpack://phaser-3-vsc-typescript-nodejs/external var \"Phaser\"","webpack://phaser-3-vsc-typescript-nodejs/webpack/bootstrap","webpack://phaser-3-vsc-typescript-nodejs/webpack/startup"],"sourcesContent":["import 'phaser';\r\nimport Boot from \"./Scenes/Boot\";\r\nimport Preloader from \"./Scenes/Preloader\";\r\nimport MainMenu from \"./Scenes/MainMenu\";\r\nimport SplashScreen from \"./Scenes/SplashScreen\";\r\nimport Utilities from \"./Utilities\";\r\nimport MainGame from \"./Scenes/MainGame\";\r\nimport MainSettings from \"./Scenes/MainSettings\";\r\n\r\nconst gameConfig: Phaser.Types.Core.GameConfig = {\r\n\twidth: 800,\r\n\theight: 600,\r\n\ttype: Phaser.AUTO,\r\n\tparent: \"content\",\r\n\ttitle: \"Dot Box\"\r\n};\r\n\r\nexport default class Game extends Phaser.Game {\r\n\tconstructor(config: Phaser.Types.Core.GameConfig) {\r\n\t\tUtilities.LogSceneMethodEntry(\"Game\", \"constructor\");\r\n\r\n\t\tsuper(config);\r\n\r\n\t\tthis.scene.add(Boot.Name, Boot);\r\n\t\tthis.scene.add(Preloader.Name, Preloader);\r\n\t\tthis.scene.add(SplashScreen.Name, SplashScreen);\r\n\t\tthis.scene.add(MainMenu.Name, MainMenu);\r\n\t\tthis.scene.add(MainGame.Name, MainGame);\r\n\t\tthis.scene.add(MainSettings.Name, MainSettings);\r\n\t\tthis.scene.start(Boot.Name);\r\n\t}\r\n}\r\n\r\n/**\r\n * Workaround for inability to scale in Phaser 3.\r\n * From http://www.emanueleferonato.com/2018/02/16/how-to-scale-your-html5-games-if-your-framework-does-not-feature-a-scale-manager-or-if-you-do-not-use-any-framework/\r\n */\r\nfunction resize(): void {\r\n\tconst canvas = document.querySelector(\"canvas\");\r\n\tconst width = window.innerWidth;\r\n\tconst height = window.innerHeight;\r\n\tconst wratio = width / height;\r\n\tconst ratio = Number(gameConfig.width) / Number(gameConfig.height);\r\n\tif (wratio < ratio) {\r\n\t\tcanvas.style.width = width + \"px\";\r\n\t\tcanvas.style.height = (width / ratio) + \"px\";\r\n\t} else {\r\n\t\tcanvas.style.width = (height * ratio) + \"px\";\r\n\t\tcanvas.style.height = height + \"px\";\r\n\t}\r\n}\r\n\r\nwindow.onload = (): void => {\r\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n\tconst game = new Game(gameConfig);\r\n\t// Uncomment the following two lines if you want the game to scale to fill the entire page, but keep the game ratio.\r\n\t//resize();\r\n\t//window.addEventListener(\"resize\", resize, true);\r\n};\r\n","import Preloader from \"./Preloader\";\r\nimport Utilities from \"../Utilities\";\r\n\r\nexport default class Boot extends Phaser.Scene {\r\n\t/**\r\n\t * Unique name of the scene.\r\n\t */\r\n\tpublic static Name = \"Boot\";\r\n\r\n\tpublic preload(): void {\r\n\t\t// Preload as needed.\r\n\t}\r\n\r\n\tpublic create(): void {\r\n\t\tUtilities.LogSceneMethodEntry(\"Boot\", \"create\");\r\n\r\n\t\tthis.scene.start(Preloader.Name);\r\n\t}\r\n}\r\n","import Utilities from \"../Utilities\";\r\n\r\nexport default class MainGame extends Phaser.Scene {\r\n\t/**\r\n\t * Unique name of the scene.\r\n\t */\r\n\tpublic static Name = \"MainGame\";\r\n\r\n\tgraphics: Phaser.GameObjects.Graphics = null;\r\n\tpath = null;\r\n\tcurve: Phaser.Curves.Line[] = [];\r\n\tpoints: { [id: string]: [Phaser.GameObjects.Image, Phaser.Math.Vector2] } = {};;//[Phaser.GameObjects.Image, Number, Number][] = [];\r\n\tfirstDot: Phaser.GameObjects.Image = null;\r\n\tsecDot: Phaser.GameObjects.Image = null;\r\n\trowCount = 11;\r\n\tcolumnCount = 9;\r\n\tright = 100;\r\n\ttop = 50;\r\n\trectangleWith = 50;\r\n\tlineCount = 0;\r\n\r\n\tcolors = [];\r\n\r\n\tturnCounter = 0;\r\n\tturns = [];\r\n\tturnIndex = 0;\r\n\r\n\tcreatedLines = [];\r\n\r\n\tboxesAnchorPoint = [];\r\n\r\n\tprevBoxCount = 0;\r\n\r\n\tpublic preload(): void {\r\n\t\t// Preload as needed.\r\n\r\n\t}\r\n\r\n\tpublic create(): void {\r\n\t\tUtilities.LogSceneMethodEntry(\"MainGame\", \"create\");\r\n\t\tthis.colors = [0xff0000, 0x0000ff];\r\n\t\tthis.lineCount = ((this.rowCount - 1) * this.columnCount) + ((this.columnCount - 1) * this.rowCount);\r\n\r\n\t\tthis.graphics = this.add.graphics();\r\n\r\n\t\tthis.path = { t: 0, vec: new Phaser.Math.Vector2() };\r\n\r\n\r\n\r\n\r\n\t\tfor (var lineNum = 0; lineNum < this.lineCount; lineNum++) {\r\n\t\t\tthis.curve[lineNum] = new Phaser.Curves.Line([-10, -10, -60, -40]);\r\n\t\t\tthis.turns[lineNum] = 0;\r\n\t\t}\r\n\r\n\r\n\t\t//\tthis.add.image(this.cameras.main.centerX, this.cameras.main.centerY, \"Phaser-Logo-Small\");\r\n\t\tvar pointsCounter = 0;\r\n\t\tfor (let column = 0; column < this.columnCount; column++) {\r\n\t\t\tfor (let row = 0; row < this.rowCount; row++) {\r\n\r\n\r\n\t\t\t\tconst point = this.add.image((column * this.rectangleWith) + this.right, (row * this.rectangleWith) + this.top, 'dragcircle', 1).setInteractive();\r\n\t\t\t\tpoint.name = pointsCounter.toString();\r\n\t\t\t\tthis.points[point.name] = [point, new Phaser.Math.Vector2(column, row)];\r\n\t\t\t\tthis.input.setDraggable([point]);\r\n\r\n\r\n\t\t\t\tpointsCounter++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t//this.curve[0].p0 = new Phaser.Math.Vector2(this.points[0].x, this.points[0].y);\r\n\t\t//this.curve[0].p1 = new Phaser.Math.Vector2(this.points[1].x, this.points[1].y);\r\n\r\n\t\tthis.input.on('dragstart', (pointer, gameObject) => {\r\n\t\t\tgameObject.setFrame(1);\r\n\t\t\tthis.firstDot = gameObject;\r\n\t\t\tcurrentRow = this.points[gameObject.name][1].y;\r\n\t\t\tcurrentColumn = this.points[gameObject.name][1].x;\r\n\r\n\t\t\t//console.log(gameObject.name, { currentRow, currentColumn });\r\n\r\n\t\t});\r\n\t\tthis.input.on('dragend', (pointer, gameObject) => {\r\n\t\t\tgameObject.setFrame(0);\r\n\r\n\t\t});\r\n\t\tlet currentLineIndex = 0;\r\n\t\tlet currentRow = 0;\r\n\t\tlet currentColumn = 0;\r\n\r\n\t\tthis.input.on('pointerover', (event, gameObjects) => {\r\n\t\t\tgameObjects[0].setFrame(1);\r\n\t\t\tif (this.firstDot != gameObjects[0] && this.firstDot != null) {\r\n\t\t\t\tthis.secDot = gameObjects[0];\r\n\r\n\t\t\t}\r\n\t\t});\r\n\t\tthis.input.on('pointerout', (event, gameObjects) => {\r\n\t\t\tgameObjects[0].setFrame(0);\r\n\t\t});\r\n\r\n\t\tthis.input.on('pointerup', (pointer) => {\r\n\r\n\r\n\t\t\tif (this.firstDot != null && this.secDot != null) {\r\n\r\n\t\t\t\tif (this.firstDot == this.secDot)\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\tvar r = this.points[this.secDot.name][1].y;\r\n\t\t\t\tvar c = this.points[this.secDot.name][1].x;\r\n\t\t\t\t//console.log(this.secDot.name, { r, c });\r\n\t\t\t\tif (currentRow != r && currentColumn != c)\r\n\t\t\t\t\treturn;\r\n\t\t\t\tif (Math.abs(currentRow - r) > 1 || Math.abs(currentColumn - c) > 1)\r\n\t\t\t\t\treturn;\r\n\t\t\t\tif (this.createdLines.filter((item) => (item[0] == this.firstDot.name && item[1] == this.secDot.name) || (item[1] == this.firstDot.name && item[0] == this.secDot.name)).length > 0)\r\n\t\t\t\t\treturn;\r\n\r\n\r\n\r\n\t\t\t\tthis.curve[currentLineIndex].p0 = new Phaser.Math.Vector2(this.firstDot.x, this.firstDot.y);\r\n\t\t\t\tthis.curve[currentLineIndex].p1 = new Phaser.Math.Vector2(this.secDot.x, this.secDot.y);\r\n\t\t\t\tcurrentLineIndex++;\r\n\t\t\t\tif (currentLineIndex >= this.curve.length)\r\n\t\t\t\t\tcurrentLineIndex = 0;\r\n\r\n\r\n\t\t\t\tthis.createdLines.push([this.firstDot.name, this.secDot.name]);\r\n\t\t\t\t//console.log(this.createdLines);\r\n\r\n\t\t\t\tthis.turns[this.turnIndex] = this.turnCounter;\r\n\t\t\t\tif (!this.checkBox())\r\n\t\t\t\t\tthis.turnCounter++;\r\n\t\t\t\tthis.turnIndex++;\r\n\r\n\t\t\t\tthis.firstDot = null;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t}\r\n\tpublic checkBox(): boolean {\r\n\t\tvar searachBox = [[0, this.rowCount], [1, this.rowCount + 1], [0, 1], [this.rowCount, this.rowCount + 1]];\r\n\t\tvar boxPlaceCount = 0;\r\n\t\tvar lineCount = 0;\r\n\t\tvar minPoint = 99999;\r\n\t\tfor (let column = 0; column < this.columnCount; column++) {\r\n\t\t\tfor (let row = 0; row < this.rowCount-1; row++) {\r\n\t\t\t\t//console.log({row})\r\n\t\t\t\tlineCount = 0;\r\n\t\t\t\tminPoint = 99999;\r\n\t\t\t\tsearachBox.forEach(element => {\r\n\t\t\t\t\tvar pont1 = element[0] + (boxPlaceCount + column);\r\n\t\t\t\t\tvar pont2 = element[1] + (boxPlaceCount + column);\r\n\r\n\t\t\t\t\tif (pont1 < minPoint)\r\n\t\t\t\t\t\tminPoint = pont1;\r\n\t\t\t\t\tif (pont2 < minPoint)\r\n\t\t\t\t\t\tminPoint = pont2;\r\n\r\n\t\t\t\t\tif (this.createdLines.filter((item) => (item[0] == pont1 && item[1] == pont2) || (item[1] == pont1 && item[0] == pont2)).length > 0) {\r\n\t\t\t\t\t\tlineCount++;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tif (lineCount == 4) {\r\n\t\t\t\r\n\t\t\t\t\tif (this.boxesAnchorPoint.filter((item) => (item.point == minPoint)).length == 0) {\r\n\t\t\t\t\t\tthis.boxesAnchorPoint.push({ point: minPoint, r: row, c: column, turn: this.turnCounter });\r\n\t\t\t\t\t\t//console.log(this.boxesAnchorPoint)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tboxPlaceCount++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (this.prevBoxCount != this.boxesAnchorPoint.length) {\r\n\t\t\tthis.prevBoxCount = this.boxesAnchorPoint.length;\r\n\t\t\treturn true;\r\n\t\t} else\r\n\t\t\treturn false;\r\n\t}\r\n\tpublic reset(): void {\r\n\r\n\t\tthis.prevBoxCount = 0;\r\n\r\n\t\tthis.turns = null;\r\n\t\tthis.turns = [];\r\n\r\n\t\tthis.turnCounter = 0;\r\n\t\tthis.turnIndex = 0;\r\n\r\n\r\n\t\tthis.createdLines = null;\r\n\t\tthis.createdLines = [];\r\n\r\n\r\n\t\tthis.lineCount = ((this.rowCount - 1) * this.columnCount) + ((this.columnCount - 1) * this.rowCount);\r\n\r\n\t\tfor (var lineNum = 0; lineNum < this.lineCount; lineNum++) {\r\n\t\t\tif (this.curve[lineNum] == undefined)\r\n\t\t\t\tthis.curve[lineNum] = new Phaser.Curves.Line([-10, -10, -60, -40]);\r\n\t\t\telse {\r\n\t\t\t\tthis.curve[lineNum].p0 = new Phaser.Math.Vector2(-10, -10);\r\n\t\t\t\tthis.curve[lineNum].p1 = new Phaser.Math.Vector2(-60, -60);\r\n\t\t\t}\r\n\r\n\t\t\tthis.turns[lineNum] = 0;\r\n\t\t}\r\n\r\n\t\tthis.firstDot = null;\r\n\t\tthis.secDot = null;\r\n\r\n\t}\r\n\r\n\tpublic update(time: number, delta: number): void {\r\n\t\tthis.graphics.clear();\r\n\r\n\t\tfor (var lineNum = 0; lineNum < this.createdLines.length; lineNum++) {\r\n\t\t\tthis.graphics.lineStyle(10, this.colors[this.turns[lineNum] % 2], 0.5);\r\n\t\t\tthis.curve[lineNum].draw(this.graphics);\r\n\t\t}\r\n\r\n\t\tthis.boxesAnchorPoint.forEach((boxAnchorPoint) => {\r\n\t\t\tthis.graphics.fillStyle(this.colors[boxAnchorPoint.turn % 2], 0.2);\r\n\t\t\tthis.graphics.fillRect(\r\n\t\t\t\t(boxAnchorPoint.c * this.rectangleWith) + this.right,\r\n\t\t\t\t(boxAnchorPoint.r * this.rectangleWith) + this.top,\r\n\t\t\t\tthis.rectangleWith,\r\n\t\t\t\tthis.rectangleWith);\r\n\t\t})\r\n\r\n\t}\r\n}\r\n","import Utilities from \"../Utilities\";\r\nimport MainGame from \"./MainGame\";\r\nimport MainSettings from \"./MainSettings\";\r\n\r\nexport default class MainMenu extends Phaser.Scene {\r\n\t/**\r\n\t * Unique name of the scene.\r\n\t */\r\n\tpublic static Name = \"MainMenu\";\r\n\r\n\tpublic preload(): void {\r\n\t\t// Preload as needed.\r\n\t}\r\n\r\n\tpublic create(): void {\r\n\t\tUtilities.LogSceneMethodEntry(\"MainMenu\", \"create\");\r\n\t\tconst textYPosition = this.cameras.main.height / 3;\r\n\r\n\t\tconst newGameText = this.add.text(this.cameras.main.centerX, textYPosition, \"--[[ Start ]]--\");\r\n\t\tnewGameText\r\n\t\t\t.setFontFamily(\"monospace\")\r\n\t\t\t.setFontSize(40)\r\n\t\t\t.setFill(\"#fff\")\r\n\t\t\t.setAlign(\"center\")\r\n\t\t\t.setOrigin(0.5);\r\n\t\tnewGameText.setInteractive();\r\n\t\tnewGameText.on(\"pointerdown\", () => { this.scene.start(MainGame.Name); }, this);\r\n\r\n\t\tconst settingsText = this.add.text(this.cameras.main.centerX, textYPosition * 2, \"Settings\");\r\n\t\tsettingsText.setOrigin(0.5);\r\n\t\tsettingsText.setFontFamily(\"monospace\").setFontSize(30).setFill(\"#fff\");\r\n\t\tsettingsText.setInteractive();\r\n\t\tsettingsText.on(\"pointerdown\", () => { this.scene.start(MainSettings.Name); }, this);\r\n\t}\r\n\r\n\tpublic update(): void {\r\n\t\t// Update logic, as needed.\r\n\t}\r\n}\r\n","import Utilities from \"../Utilities\";\r\nimport MainMenu from \"./MainMenu\";\r\n\r\nexport default class MainSettings extends Phaser.Scene {\r\n\t/**\r\n\t * Unique name of the scene.\r\n\t */\r\n\tpublic static Name = \"MainSettings\";\r\n\r\n\tpublic create(): void {\r\n\t\tUtilities.LogSceneMethodEntry(\"MainSettings\", \"create\");\r\n\t\tconst startYPosition = this.cameras.main.height / 4;\r\n\t\tconst fontSize = 25;\r\n\r\n\t\t// Add a button to return to the main menu.\r\n\t\tconst backText = this.add.text(this.cameras.main.centerX, startYPosition * 2, \"Go Back\");\r\n\t\tbackText\r\n\t\t\t.setOrigin(0.5)\r\n\t\t\t.setFontFamily(\"monospace\").setFontSize(fontSize).setFill(\"#fff\")\r\n\t\t\t.setInteractive();\r\n\t\tbackText.on(\"pointerdown\", () => { this.scene.start(MainMenu.Name); }, this);\r\n\t}\r\n}\r\n","import SplashScreen from \"./SplashScreen\";\r\nimport Utilities from \"../Utilities\";\r\n\r\nexport default class Preloader extends Phaser.Scene {\r\n\t/**\r\n\t * Unique name of the scene.\r\n\t */\r\n\tpublic static Name = \"Preloader\";\r\n\r\n\tpublic preload(): void {\r\n\t\tthis.addProgressBar();\r\n\r\n\t\tthis.load.path = \"assets/\";\r\n\t\t this.load.image(\"phaser_pixel_medium_flat\");\r\n\t\t this.load.image(\"Phaser-Logo-Small\");\r\n\r\n\t\tthis.load.spritesheet('dragcircle', 'dragcircle.png', { frameWidth: 16 });\r\n\r\n\t\t// You should remove this logic; this is only included here to show off the progress bar.\r\n\t\t// for (let i = 0; i < 100; i++) {\r\n\t\t// \tthis.load.image(\"Phaser-Logo-Small\" + i, \"Phaser-Logo-Small.png\");\r\n\t\t// }\r\n\t}\r\n\r\n\tpublic create(): void {\r\n\t\tUtilities.LogSceneMethodEntry(\"Preloader\", \"create\");\r\n\r\n\t\tthis.scene.start(SplashScreen.Name);\r\n\t}\r\n\r\n\tpublic update(): void {\r\n\t\t// preload handles updates to the progress bar, so nothing should be needed here.\r\n\t}\r\n\r\n\t/**\r\n\t * Adds a progress bar to the display, showing the percentage of assets loaded and their name.\r\n\t */\r\n\tprivate addProgressBar(): void {\r\n\t\tconst width = this.cameras.main.width;\r\n\t\tconst height = this.cameras.main.height;\r\n\t\t/** Customizable. This text color will be used around the progress bar. */\r\n\t\tconst outerTextColor = '#ffffff';\r\n\r\n\t\tconst progressBar = this.add.graphics();\r\n\t\tconst progressBox = this.add.graphics();\r\n\t\tprogressBox.fillStyle(0x222222, 0.8);\r\n\t\tprogressBox.fillRect(width / 4, height / 2 - 30, width / 2, 50);\r\n\r\n\t\tconst loadingText = this.make.text({\r\n\t\t\tx: width / 2,\r\n\t\t\ty: height / 2 - 50,\r\n\t\t\ttext: \"Loading...\",\r\n\t\t\tstyle: {\r\n\t\t\t\tfont: \"20px monospace\",\r\n\t\t\t\tcolor: outerTextColor\r\n\t\t\t}\r\n\t\t});\r\n\t\tloadingText.setOrigin(0.5, 0.5);\r\n\r\n\t\tconst percentText = this.make.text({\r\n\t\t\tx: width / 2,\r\n\t\t\ty: height / 2 - 5,\r\n\t\t\ttext: \"0%\",\r\n\t\t\tstyle: {\r\n\t\t\t\tfont: \"18px monospace\",\r\n\t\t\t\tcolor: \"#ffffff\"\r\n\t\t\t}\r\n\t\t});\r\n\t\tpercentText.setOrigin(0.5, 0.5);\r\n\r\n\t\tconst assetText = this.make.text({\r\n\t\t\tx: width / 2,\r\n\t\t\ty: height / 2 + 50,\r\n\t\t\ttext: \"\",\r\n\t\t\tstyle: {\r\n\t\t\t\tfont: \"18px monospace\",\r\n\t\t\t\tcolor: outerTextColor\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tassetText.setOrigin(0.5, 0.5);\r\n\r\n\t\tthis.load.on(\"progress\", (value: number) => {\r\n\t\t\tpercentText.setText(parseInt(value * 100 + \"\", 10) + \"%\");\r\n\t\t\tprogressBar.clear();\r\n\t\t\tprogressBar.fillStyle(0xffffff, 1);\r\n\t\t\tprogressBar.fillRect((width / 4) + 10, (height / 2) - 30 + 10, (width / 2 - 10 - 10) * value, 30);\r\n\t\t});\r\n\r\n\t\tthis.load.on(\"fileprogress\", (file: Phaser.Loader.File) => {\r\n\t\t\tassetText.setText(\"Loading asset: \" + file.key);\r\n\t\t});\r\n\r\n\t\tthis.load.on(\"complete\", () => {\r\n\t\t\tprogressBar.destroy();\r\n\t\t\tprogressBox.destroy();\r\n\t\t\tloadingText.destroy();\r\n\t\t\tpercentText.destroy();\r\n\t\t\tassetText.destroy();\r\n\t\t});\r\n\t}\r\n}\r\n","import Utilities from \"../Utilities\";\r\nimport MainMenu from \"./MainMenu\";\r\n\r\nexport default class SplashScreen extends Phaser.Scene {\r\n\t/**\r\n\t * Unique name of the scene.\r\n\t */\r\n\tpublic static Name = \"SplashScreen\";\r\n\r\n\tpublic preload(): void {\r\n\t\tthis.load.path = \"assets/\";\r\n\t}\r\n\r\n\tpublic create(): void {\r\n\t\tUtilities.LogSceneMethodEntry(\"SplashScreen\", \"create\");\r\n\r\n\t\tconst titleText = this.add.text(this.cameras.main.centerX, this.cameras.main.centerY * 0.5, \"Dot Box Created by: Reza Baghbani\")\r\n\t\t\t.setOrigin(0.5, 0)\r\n\t\t\t.setFontFamily(\"monospace\").setFontSize(26).setFill(\"#fff\");\r\n\r\n\t\tconst poweredByText = this.add.text(this.cameras.main.centerX, this.cameras.main.centerY - 25, \"Powered By\");\r\n\t\tpoweredByText.setOrigin(0.5, 0.5);\r\n\t\tpoweredByText.setFontFamily(\"monospace\").setFontSize(20).setFill(\"#fff\");\r\n\t\tthis.add.image(this.cameras.main.centerX, this.cameras.main.centerY, \"phaser_pixel_medium_flat\");\r\n\r\n\t\tthis.input.setDefaultCursor(\"pointer\");\r\n\t\tthis.input.on(\"pointerdown\", this.loadMainMenu, this);\r\n\r\n\t\tthis.time.addEvent({\r\n\t\t\t// Run after three seconds.\r\n\t\t\tdelay: 3000,\r\n\t\t\tcallback: this.loadMainMenu,\r\n\t\t\tcallbackScope: this,\r\n\t\t\tloop: false\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Load the next scene, the main menu.\r\n\t */\r\n\tprivate loadMainMenu(): void {\r\n\t\tthis.scene.start(MainMenu.Name);\r\n\t}\r\n}\r\n","export default class Utilities {\r\n\t/**\r\n\t * Logs a particular message to the console.\r\n\t * @param message Message to log.\r\n\t */\r\n\tpublic static Log(message: string): void {\r\n\t\tconsole.log((new Date()).toISOString() + \" : \" + message);\r\n\t}\r\n\r\n\t/**\r\n\t * Logs the start of a method in a scene.\r\n\t * @param sceneName Name of the scene.\r\n\t * @param method Method called within the scene.\r\n\t */\r\n\tpublic static LogSceneMethodEntry(sceneName: string, method: string): void {\r\n\t\tthis.Log(\"Entered \" + sceneName + \" \" + method + \"()\");\r\n\t}\r\n}\r\n","module.exports = Phaser;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(862);\n"],"names":["gameConfig","width","height","type","Phaser","AUTO","parent","title","Game","constructor","config","LogSceneMethodEntry","super","this","scene","add","Name","start","window","onload","Boot","Scene","preload","create","MainGame","graphics","path","curve","points","firstDot","secDot","rowCount","columnCount","right","top","rectangleWith","lineCount","colors","turnCounter","turns","turnIndex","createdLines","boxesAnchorPoint","prevBoxCount","t","vec","Math","Vector2","lineNum","Curves","Line","pointsCounter","column","row","point","image","setInteractive","name","toString","input","setDraggable","on","pointer","gameObject","setFrame","currentRow","y","currentColumn","x","currentLineIndex","event","gameObjects","r","c","abs","filter","item","length","p0","p1","push","checkBox","searachBox","boxPlaceCount","minPoint","forEach","element","pont1","pont2","turn","reset","undefined","update","time","delta","clear","lineStyle","draw","boxAnchorPoint","fillStyle","fillRect","MainMenu","textYPosition","cameras","main","newGameText","text","centerX","setFontFamily","setFontSize","setFill","setAlign","setOrigin","settingsText","MainSettings","startYPosition","backText","Preloader","addProgressBar","load","spritesheet","frameWidth","outerTextColor","progressBar","progressBox","loadingText","make","style","font","color","percentText","assetText","value","setText","parseInt","file","key","destroy","SplashScreen","centerY","poweredByText","setDefaultCursor","loadMainMenu","addEvent","delay","callback","callbackScope","loop","static","message","console","log","Date","toISOString","sceneName","method","Log","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","call"],"sourceRoot":""}